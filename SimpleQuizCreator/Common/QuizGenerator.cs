using SimpleQuizCreator.Helpers;
using SimpleQuizCreator.Interfaces;
using SimpleQuizCreator.Models;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SimpleQuizCreator.Common
{
    /// <summary>
    /// Generate new quiz using settings
    /// Draws questions from the pool, then mixes their order and the order of answers. 
    /// 1. check if autogenerated
    /// 2. generate answer
    /// 3. Shuffle 
    /// </summary>
    public class QuizGenerator : IQuizGenerator
    {
        QuizGenerated _generated;
        List<Question> _tmpQuestions;

        public void GenerateNewQuiz(Quiz quiz, QuizSettings settings)
        {
            _generated = new QuizGenerated();
            _generated.Name = quiz.Name;
            _generated.QuizSettings = settings;

            _tmpQuestions = quiz.GetDeepCopy().Questions;

            GenerateAnswers();
            ShuffleQuestionsAndAnswers();

            _generated.Questions = _tmpQuestions.Take(settings.QuestionLimit).ToList();
        }

        private void GenerateAnswers()
        {
            if(IsAutogenarateTest())
            {
                _generated.IsAutogenerated = true;
                List<string> answers = new List<string>();
                var maxAns = Math.Min(_generated.QuizSettings.AutogenerateAnswers, _tmpQuestions.Count);

                // rewrite correct answers
                foreach (var question in _tmpQuestions)
                {
                    foreach(var answer in question.Answers)
                    {
                        answers.Add(answer.AnswerText);
                    }
                }

                // sum all answers and shuffle 
                var allAnswer = _tmpQuestions.SelectMany(x => x.Answers).OrderBy(x => Guid.NewGuid()).ToList();

                foreach (var question in _tmpQuestions)
                {
                    foreach( var ans in allAnswer)
                    {
                        if (question.AnswersCount >= maxAns)
                        {
                            break;
                        }
                        if (!question.Answers.Any(x => x.AnswerText.Equals(ans.AnswerText)))
                        {
                            question.Answers.Add(new Answer
                            {
                                AnswerText = ans.AnswerText,
                                IsSelected = false,
                                IsCorrect = false
                            });
                        }
                    }
                }

            }
        }

        /// <summary>
        /// If all questions has only one and good answer, it is autogenerate quiz
        /// </summary>
        private bool IsAutogenarateTest()
        {
            return _tmpQuestions.All(x => x.AnswersCount == x.GoodAnswersCount && x.AnswersCount == 1);
        }

        private void ShuffleQuestionsAndAnswers()
        {
            _tmpQuestions.ShuffleInPlaceList();
            foreach (var q in _tmpQuestions)
            {
                q.Answers.ShuffleInPlaceList();
            }
        }

        public QuizGenerated GetQuiz()
        {
            return _generated;
        }
    }
}
